{"version":3,"file":"Range.js","mappings":"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","names":["Range","console","log","$element","dataset","min","max","minValue","maxValue","step","innerHTML","i","parseInt","span","document","createElement","classList","add","style","left","querySelector","appendChild","slider","range","thumbLeft","thumbRight","textContent","value","right","inputLeft","inputRight","addEventListener","Math","toString","inputValue","percent","_this","Component"],"sources":["../form-component/range/Range.js"],"sourcesContent":["import Component from \"../../basic/Component.js\";\r\n\r\nexport default class Range extends Component {\r\n    setElements() {\r\n        console.log(this.$element.dataset)\r\n        const {min, max, minValue, maxValue, step} = this.$element.dataset;\r\n\r\n        this.$element.innerHTML = `\r\n            <input type=\"range\" class=\"input-left\" name=\"max\" min=${min} max=${max} value=${minValue} step=${step}>\r\n            <input type=\"range\" class=\"input-right\" name=\"max\" min=${min} max=${max} value=${maxValue} step=${step}>\r\n\r\n            <div class=\"slider\">\r\n                <div class=\"track\"></div>\r\n                <div class=\"range\"></div>\r\n                <div class=\"thumb left\"><span class=\"thumb-min\"></span></div>\r\n                <div class=\"thumb right\"><span class=\"thumb-max\"></span></div>\r\n            </div>`;\r\n\r\n        if(min &&  max && step && minValue) {\r\n            for (let i = parseInt(min, 10)+parseInt(step, 10); i < parseInt(max, 10); i += parseInt(step, 10)) {\r\n                const span = document.createElement('span');\r\n                span.classList.add('step');\r\n                span.style.left = `${i}%`\r\n                this.$element.querySelector('.slider')?.appendChild(span)\r\n            }\r\n        }\r\n\r\n        const slider = this.$element.querySelector('.slider');\r\n        const range = slider?.querySelector('.range');\r\n        const thumbLeft = slider.querySelector('.slider .thumb.left');\r\n        const thumbRight = slider.querySelector('.thumb.right');\r\n        slider.querySelector('.thumb-min').textContent = this.$element.querySelector(\".input-left\").value;\r\n        slider.querySelector('.thumb-max').textContent = this.$element.querySelector(\".input-right\").value;\r\n        thumbLeft.style.left = `${minValue}%`;\r\n        range.style.left = `${minValue}%`;\r\n        range.style.right = `${max - maxValue}%`;\r\n        thumbRight.style.left = `${maxValue - 2}%`;\r\n        // range.style.right = `${parseInt(minValue, 10) -3}%`;\r\n        // thumbRight.style.right = `${parseInt(minValue, 10)  -3}%`;\r\n        // range.style.right = `${parseInt(max, 10) - parseInt(maxValue, 10)}%`;\r\n        // thumbRight.style.right = `${parseInt(max, 10) - parseInt(maxValue, 10)}%`;\r\n    }\r\n\r\n    setEvents() {\r\n        const slider = this.$element.querySelector('.slider');\r\n        const range = slider?.querySelector('.range');\r\n        const thumbLeft = slider.querySelector('.slider .thumb.left');\r\n        const thumbRight = slider.querySelector('.thumb.right');\r\n        const inputLeft = this.$element.querySelector('.input-left');\r\n        const inputRight = this.$element.querySelector('.input-right');\r\n\r\n        inputLeft?.addEventListener('input', () => {\r\n            const [min, max] = [parseInt(inputLeft.min), parseInt(inputLeft.max)];\r\n            inputLeft.value = Math.min(parseInt(inputLeft.value), parseInt(inputRight.value) - parseInt(inputLeft.step)).toString();\r\n\r\n            const inputValue = parseInt(inputLeft.value, 10)\r\n            const percent = ((inputValue - min) / (max-min)) * 100;\r\n            thumbLeft.style.left = `${percent}%`;\r\n            range.style.left = `${percent}%`;\r\n            slider.querySelector('.thumb-min').textContent = this.$element.querySelector(\".input-left\").value;\r\n\r\n        })\r\n\r\n        inputRight?.addEventListener('input', () => {\r\n            const [min, max] = [parseInt(inputRight.min), parseInt(inputRight.max)];\r\n            inputRight.value = Math.max(parseInt(inputRight.value), parseInt(inputLeft.value) + parseInt(inputRight.step)).toString();\r\n\r\n            const inputValue = parseInt(inputRight.value, 10)\r\n            const percent = ((inputValue - min) / (max-min)) * 100;\r\n            thumbRight.style.left = `${percent - 2}%`;\r\n            range.style.right = `${100 - percent}%`;\r\n            slider.querySelector('.thumb-max').textContent = this.$element.querySelector(\".input-right\").value;\r\n        })\r\n    }\r\n}\r\n\r\n"]}